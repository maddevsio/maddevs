// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Code block slice component Renders correctly 1`] = `
<div
  class="post-part single"
>
  <div
    class="prism-editor-wrapper code-sample"
  >
    <div
      class="prism-editor__container"
    >
      <textarea
        autocapitalize="off"
        autocomplete="off"
        autocorrect="off"
        class="prism-editor__textarea"
        data-gramm="false"
        data-testid="textarea"
        placeholder=""
        readonly="readonly"
        spellcheck="false"
      />
      <pre
        class="prism-editor__editor"
        data-testid="preview"
      >
        <span
          class="token function"
        >
          getAllHeadings
        </span>
        <span
          class="token punctuation"
        >
          (
        </span>
        <span
          class="token punctuation"
        >
          )
        </span>
         
        <span
          class="token punctuation"
        >
          {
        </span>
        
  
        <span
          class="token keyword"
        >
          this
        </span>
        <span
          class="token punctuation"
        >
          .
        </span>
        document
        <span
          class="token punctuation"
        >
          .
        </span>
        body
        <span
          class="token punctuation"
        >
          .
        </span>
        <span
          class="token function"
        >
          forEach
        </span>
        <span
          class="token punctuation"
        >
          (
        </span>
        <span
          class="token parameter"
        >
          listItem
        </span>
         
        <span
          class="token operator"
        >
          =&gt;
        </span>
         
        <span
          class="token punctuation"
        >
          {
        </span>
        
    
        <span
          class="token keyword"
        >
          if
        </span>
        <span
          class="token punctuation"
        >
          (
        </span>
        listItem
        <span
          class="token punctuation"
        >
          .
        </span>
        primary
        <span
          class="token punctuation"
        >
          .
        </span>
        text 
        <span
          class="token operator"
        >
          !==
        </span>
         
        <span
          class="token keyword"
        >
          undefined
        </span>
        <span
          class="token punctuation"
        >
          )
        </span>
         
        <span
          class="token punctuation"
        >
          {
        </span>
        
      
        <span
          class="token keyword"
        >
          if
        </span>
        <span
          class="token punctuation"
        >
          (
        </span>
        listItem
        <span
          class="token punctuation"
        >
          .
        </span>
        primary
        <span
          class="token punctuation"
        >
          .
        </span>
        text
        <span
          class="token punctuation"
        >
          [
        </span>
        <span
          class="token number"
        >
          0
        </span>
        <span
          class="token punctuation"
        >
          ]
        </span>
        <span
          class="token punctuation"
        >
          .
        </span>
        type 
        <span
          class="token operator"
        >
          ===
        </span>
         
        <span
          class="token string"
        >
          'heading1'
        </span>
        <span
          class="token punctuation"
        >
          )
        </span>
         
        <span
          class="token punctuation"
        >
          {
        </span>
        
        
        <span
          class="token keyword"
        >
          this
        </span>
        <span
          class="token punctuation"
        >
          .
        </span>
        headingsList
        <span
          class="token punctuation"
        >
          .
        </span>
        <span
          class="token function"
        >
          push
        </span>
        <span
          class="token punctuation"
        >
          (
        </span>
        <span
          class="token punctuation"
        >
          {
        </span>
        
          textContent
        <span
          class="token operator"
        >
          :
        </span>
         listItem
        <span
          class="token punctuation"
        >
          .
        </span>
        primary
        <span
          class="token punctuation"
        >
          .
        </span>
        text
        <span
          class="token punctuation"
        >
          [
        </span>
        <span
          class="token number"
        >
          0
        </span>
        <span
          class="token punctuation"
        >
          ]
        </span>
        <span
          class="token punctuation"
        >
          .
        </span>
        text
        <span
          class="token punctuation"
        >
          ,
        </span>
        
          headingName
        <span
          class="token operator"
        >
          :
        </span>
         listItem
        <span
          class="token punctuation"
        >
          .
        </span>
        primary
        <span
          class="token punctuation"
        >
          .
        </span>
        text
        <span
          class="token punctuation"
        >
          [
        </span>
        <span
          class="token number"
        >
          0
        </span>
        <span
          class="token punctuation"
        >
          ]
        </span>
        <span
          class="token punctuation"
        >
          .
        </span>
        text
        <span
          class="token punctuation"
        >
          .
        </span>
        <span
          class="token function"
        >
          toLowerCase
        </span>
        <span
          class="token punctuation"
        >
          (
        </span>
        <span
          class="token punctuation"
        >
          )
        </span>
        <span
          class="token punctuation"
        >
          .
        </span>
        <span
          class="token function"
        >
          replace
        </span>
        <span
          class="token punctuation"
        >
          (
        </span>
        <span
          class="token regex"
        >
          <span
            class="token regex-delimiter"
          >
            /
          </span>
          <span
            class="token regex-source language-regex"
          >
            s
          </span>
          <span
            class="token regex-delimiter"
          >
            /
          </span>
          <span
            class="token regex-flags"
          >
            g
          </span>
        </span>
         
        <span
          class="token punctuation"
        >
          ,
        </span>
         
        <span
          class="token string"
        >
          '-'
        </span>
        <span
          class="token punctuation"
        >
          )
        </span>
        
        
        <span
          class="token punctuation"
        >
          }
        </span>
        <span
          class="token punctuation"
        >
          )
        </span>
        <span
          class="token punctuation"
        >
          ;
        </span>
        
      
        <span
          class="token punctuation"
        >
          }
        </span>
        
    
        <span
          class="token punctuation"
        >
          }
        </span>
        
  
        <span
          class="token punctuation"
        >
          }
        </span>
        <span
          class="token punctuation"
        >
          )
        </span>
        <span
          class="token punctuation"
        >
          ;
        </span>
        <br />
      </pre>
    </div>
  </div>
</div>
`;
